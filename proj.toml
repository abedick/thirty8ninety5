##################################################################################
## gmbH Project
##################################################################################


max_services_per_node = 3
include_dashboard = true

##################################################################################
[core]
##################################################################################
# 
mode = "local"
#
# Print coreData to stdout and stdErr? This can be overriden with the --verbose 
# command line flag
verbose = true
#
# For instances where gmbh is running in a container
daemom = false
#
# The address to start the coreData server
address = "localhost:49500" #default is localhost:49500
#
# How long between keep alive messages
keep_alive = "45s"
#
# Path to gmbhCore binary
core_bin = ""   # default is $GOPATH/bin/gmbhCore
                # Note cannot interpolate env vars in TOML

##################################################################################
[procm]
##################################################################################
# What address should the ProcM be started at
address = "localhost:5900" #default is localhost:59500
#
# How long between keep alive messages
keep_alive = "45s"
#
# Print gmbhProcM to stdout and stdErr
verbose = false
#
# Path to gmbhProcm binary
procm_bin = ""  # default is $GOPATH/bin/gmbhProcm
                # Note cannot interpolate env vars in TOML


##################################################################################
[services] # Holds the array of services to launch from the service launcher and
############ start in managed mode.
##################################################################################

    [[service]]
    id = "content-server"
    language = "go"
    bin_path = "./services/webserver/webserver"
    src_path = "./services/webserver"
    args = [""]
    env = [""]
    entry_point = ""
    ports = ["8080"]
    interpreter = ""

    [[service]]
    id = "auth"
    language = "node"
    bin_path = ""
    src_path = "./services/auth"
    args = [""]
    env = [""]
    entry_point = "./services/auth/main.js"
    ports = [""]
    interpreter = "node"

    # [[service]]
    # id = ""
    # args = [""]
    # env = [""]
    # language = ""
    # bin_path = ""
    # src_path = ""
    # entry_point = ""
    # ports = [""]
    # interpreter = ""
